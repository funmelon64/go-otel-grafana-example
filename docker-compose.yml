version: '3.8'

volumes:
  go-modules-cache:
  esdata:

services:
  bench:
    build:
      context: .
      dockerfile: ./bench/Dockerfile
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  web-entry:
    build:
      context: .
      dockerfile: ./web-entry/Dockerfile
    environment:
      - TEMPO_ADDR=tempo:4318
      - HTTP_PORT=8080
      - BOOKING_ADDR=http://booking:8081
    ports:
      - "8080:8080"
    depends_on:
      - tempo
      - booking
    volumes:
      - go-modules-cache:/go/pkg/mod
      - ./pkg:/app/pkg
    restart: on-failure
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  booking:
    build:
      context: .
      dockerfile: ./booking/Dockerfile
    environment:
      - TEMPO_ADDR=tempo:4318
      - HTTP_PORT=8081
      - PG_USER=booking_user
      - PG_PASS=booking_pass
      - PG_ADDR=postgres:5432
      - PG_DB=booking_db
      - CALC_PRICES_ADDR=http://price-calcs:8082
    ports:
      - "8081:8081"
    depends_on:
      - tempo
      - postgres
      - price-calcs
    volumes:
      - go-modules-cache:/go/pkg/mod
      - ./pkg:/app/pkg
    restart: on-failure
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  price-calcs:
    build:
      context: .
      dockerfile: ./price-calcs/Dockerfile
    environment:
      - TEMPO_ADDR=tempo:4318
      - HTTP_PORT=8082
      - PG_USER=booking_user
      - PG_PASS=booking_pass
      - PG_ADDR=postgres:5432
      - PG_DB=booking_db
    ports:
      - "8082:8082"
    depends_on:
      - loki
      - tempo
    volumes:
      - go-modules-cache:/go/pkg/mod
      - ./pkg/:/app/pkg
    restart: on-failure
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=booking_user
      - POSTGRES_PASSWORD=booking_pass
      - POSTGRES_DB=booking_db
    ports:
      - "5432:5432"
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  tempo:
    image: grafana/tempo:main-9c42dec # version that works with my old tempo-local.yaml
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configs/tempo-local.yaml:/etc/tempo.yaml
      #- ./tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"    # tempo
      - "4317:4317"    # otlp grpc
      - "4318:4318"    # otlp http
      - "9411:9411"    # zipkin
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  loki:
    image: grafana/loki:2.6.1
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'

  grafana:
    image: grafana/grafana:9.1.6
    volumes:
      - ./configs/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'